code,name,title_kuh,faculty_kuh,institute,term,ects_kuh,url_kuh,exam,re_exam,code_kuh,url_kuc,volume,education,content,learning_outcome,literature,recommended_prereq,teaching_methods,workload,feedback_form,signup,exam_html,language,course_code,ects_kuc,level,duration,placement,schedule,capacity,study_board,department,faculty_kuc,course_coordinators,last_modified,code_kuc
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s24/B4,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Summer-2024/B4,,,NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s24/B4,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Summer-2024/B4,,,NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s24/B4,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Summer-2024/B4,,,NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s24/B4,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Summer-2024/B4,,,NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2023/B2,"[{'grade': '12', 'count': 38}, {'grade': '10', 'count': 27}, {'grade': '7', 'count': 36}, {'grade': '4', 'count': 20}, {'grade': '02', 'count': 20}, {'grade': '00', 'count': 18}, {'grade': '-3', 'count': 6}, {'grade': 'Absent', 'count': 36}, {'grade': 'Failed', 'count': 4}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 6}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 7}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 7}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2023/B2,"[{'grade': '12', 'count': 38}, {'grade': '10', 'count': 27}, {'grade': '7', 'count': 36}, {'grade': '4', 'count': 20}, {'grade': '02', 'count': 20}, {'grade': '00', 'count': 18}, {'grade': '-3', 'count': 6}, {'grade': 'Absent', 'count': 36}, {'grade': 'Failed', 'count': 4}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 6}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 7}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 7}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2023/B2,"[{'grade': '12', 'count': 38}, {'grade': '10', 'count': 27}, {'grade': '7', 'count': 36}, {'grade': '4', 'count': 20}, {'grade': '02', 'count': 20}, {'grade': '00', 'count': 18}, {'grade': '-3', 'count': 6}, {'grade': 'Absent', 'count': 36}, {'grade': 'Failed', 'count': 4}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 6}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 7}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 7}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2023/B2,"[{'grade': '12', 'count': 38}, {'grade': '10', 'count': 27}, {'grade': '7', 'count': 36}, {'grade': '4', 'count': 20}, {'grade': '02', 'count': 20}, {'grade': '00', 'count': 18}, {'grade': '-3', 'count': 6}, {'grade': 'Absent', 'count': 36}, {'grade': 'Failed', 'count': 4}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 6}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 7}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 7}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2024/B2,"[{'grade': '12', 'count': 5}, {'grade': '10', 'count': 15}, {'grade': '7', 'count': 45}, {'grade': '4', 'count': 53}, {'grade': '02', 'count': 24}, {'grade': '00', 'count': 7}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 3}, {'grade': 'Absent', 'count': 28}, {'grade': 'Failed', 'count': 14}]","[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 5}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 1}, {'grade': 'Absent', 'count': 8}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-7566706645696e33707a336970)'],Saved on the 05-07-2024,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2024/B2,"[{'grade': '12', 'count': 5}, {'grade': '10', 'count': 15}, {'grade': '7', 'count': 45}, {'grade': '4', 'count': 53}, {'grade': '02', 'count': 24}, {'grade': '00', 'count': 7}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 3}, {'grade': 'Absent', 'count': 28}, {'grade': 'Failed', 'count': 14}]","[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 5}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 1}, {'grade': 'Absent', 'count': 8}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Examination prerequisites</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed except Generative AI and internet access 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-72636d6342666b306d7730666d)'],Saved on the 24-02-2025,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2024/B2,"[{'grade': '12', 'count': 5}, {'grade': '10', 'count': 15}, {'grade': '7', 'count': 45}, {'grade': '4', 'count': 53}, {'grade': '02', 'count': 24}, {'grade': '00', 'count': 7}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 3}, {'grade': 'Absent', 'count': 28}, {'grade': 'Failed', 'count': 14}]","[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 5}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 1}, {'grade': 'Absent', 'count': 8}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-7566706645696e33707a336970)'],Saved on the 05-07-2024,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2024/B2,"[{'grade': '12', 'count': 5}, {'grade': '10', 'count': 15}, {'grade': '7', 'count': 45}, {'grade': '4', 'count': 53}, {'grade': '02', 'count': 24}, {'grade': '00', 'count': 7}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 3}, {'grade': 'Absent', 'count': 28}, {'grade': 'Failed', 'count': 14}]","[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 5}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 1}, {'grade': 'Absent', 'count': 8}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Examination prerequisites</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed except Generative AI and internet access 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-72636d6342666b306d7730666d)'],Saved on the 24-02-2025,NDAK15006U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2020/B1,"[{'grade': '12', 'count': 19}, {'grade': '10', 'count': 19}, {'grade': '7', 'count': 26}, {'grade': '4', 'count': 20}, {'grade': '02', 'count': 11}, {'grade': '00', 'count': 9}, {'grade': '-3', 'count': 3}, {'grade': 'Absent', 'count': 38}, {'grade': 'Failed', 'count': 7}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 0}, {'grade': '02', 'count': 4}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2020/B1,"[{'grade': '12', 'count': 19}, {'grade': '10', 'count': 19}, {'grade': '7', 'count': 26}, {'grade': '4', 'count': 20}, {'grade': '02', 'count': 11}, {'grade': '00', 'count': 9}, {'grade': '-3', 'count': 3}, {'grade': 'Absent', 'count': 38}, {'grade': 'Failed', 'count': 7}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 0}, {'grade': '02', 'count': 4}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2020/B1,"[{'grade': '12', 'count': 19}, {'grade': '10', 'count': 19}, {'grade': '7', 'count': 26}, {'grade': '4', 'count': 20}, {'grade': '02', 'count': 11}, {'grade': '00', 'count': 9}, {'grade': '-3', 'count': 3}, {'grade': 'Absent', 'count': 38}, {'grade': 'Failed', 'count': 7}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 0}, {'grade': '02', 'count': 4}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2020/B1,"[{'grade': '12', 'count': 19}, {'grade': '10', 'count': 19}, {'grade': '7', 'count': 26}, {'grade': '4', 'count': 20}, {'grade': '02', 'count': 11}, {'grade': '00', 'count': 9}, {'grade': '-3', 'count': 3}, {'grade': 'Absent', 'count': 38}, {'grade': 'Failed', 'count': 7}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 0}, {'grade': '02', 'count': 4}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2024/B1,,,NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2024/B1,,,NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2024/B1,,,NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2024/B1,,,NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2023/B2,"[{'grade': '12', 'count': 13}, {'grade': '10', 'count': 21}, {'grade': '7', 'count': 42}, {'grade': '4', 'count': 22}, {'grade': '02', 'count': 13}, {'grade': '00', 'count': 17}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 21}, {'grade': 'Failed', 'count': 7}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 6}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 5}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}, {'grade': 'Failed', 'count': 1}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-7566706645696e33707a336970)'],Saved on the 05-07-2024,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2023/B2,"[{'grade': '12', 'count': 13}, {'grade': '10', 'count': 21}, {'grade': '7', 'count': 42}, {'grade': '4', 'count': 22}, {'grade': '02', 'count': 13}, {'grade': '00', 'count': 17}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 21}, {'grade': 'Failed', 'count': 7}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 6}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 5}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}, {'grade': 'Failed', 'count': 1}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Examination prerequisites</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed except Generative AI and internet access 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-72636d6342666b306d7730666d)'],Saved on the 24-02-2025,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2023/B2,"[{'grade': '12', 'count': 13}, {'grade': '10', 'count': 21}, {'grade': '7', 'count': 42}, {'grade': '4', 'count': 22}, {'grade': '02', 'count': 13}, {'grade': '00', 'count': 17}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 21}, {'grade': 'Failed', 'count': 7}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 6}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 5}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}, {'grade': 'Failed', 'count': 1}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-7566706645696e33707a336970)'],Saved on the 05-07-2024,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2023/B2,"[{'grade': '12', 'count': 13}, {'grade': '10', 'count': 21}, {'grade': '7', 'count': 42}, {'grade': '4', 'count': 22}, {'grade': '02', 'count': 13}, {'grade': '00', 'count': 17}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 21}, {'grade': 'Failed', 'count': 7}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 6}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 5}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}, {'grade': 'Failed', 'count': 1}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Examination prerequisites</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed except Generative AI and internet access 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-72636d6342666b306d7730666d)'],Saved on the 24-02-2025,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2022/B2,"[{'grade': '12', 'count': 12}, {'grade': '10', 'count': 14}, {'grade': '7', 'count': 31}, {'grade': '4', 'count': 30}, {'grade': '02', 'count': 28}, {'grade': '00', 'count': 19}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 5}, {'grade': 'Failed', 'count': 15}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 4}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 3}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-7566706645696e33707a336970)'],Saved on the 05-07-2024,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2022/B2,"[{'grade': '12', 'count': 12}, {'grade': '10', 'count': 14}, {'grade': '7', 'count': 31}, {'grade': '4', 'count': 30}, {'grade': '02', 'count': 28}, {'grade': '00', 'count': 19}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 5}, {'grade': 'Failed', 'count': 15}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 4}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 3}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Examination prerequisites</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed except Generative AI and internet access 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-72636d6342666b306d7730666d)'],Saved on the 24-02-2025,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2022/B2,"[{'grade': '12', 'count': 12}, {'grade': '10', 'count': 14}, {'grade': '7', 'count': 31}, {'grade': '4', 'count': 30}, {'grade': '02', 'count': 28}, {'grade': '00', 'count': 19}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 5}, {'grade': 'Failed', 'count': 15}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 4}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 3}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-7566706645696e33707a336970)'],Saved on the 05-07-2024,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2022/B2,"[{'grade': '12', 'count': 12}, {'grade': '10', 'count': 14}, {'grade': '7', 'count': 31}, {'grade': '4', 'count': 30}, {'grade': '02', 'count': 28}, {'grade': '00', 'count': 19}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 5}, {'grade': 'Failed', 'count': 15}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 4}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 3}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Examination prerequisites</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed except Generative AI and internet access 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-72636d6342666b306d7730666d)'],Saved on the 24-02-2025,NDAK15006U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2022/B2,"[{'grade': '12', 'count': 30}, {'grade': '10', 'count': 20}, {'grade': '7', 'count': 31}, {'grade': '4', 'count': 24}, {'grade': '02', 'count': 19}, {'grade': '00', 'count': 14}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 31}, {'grade': 'Failed', 'count': 11}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 5}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 7}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2022/B2,"[{'grade': '12', 'count': 30}, {'grade': '10', 'count': 20}, {'grade': '7', 'count': 31}, {'grade': '4', 'count': 24}, {'grade': '02', 'count': 19}, {'grade': '00', 'count': 14}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 31}, {'grade': 'Failed', 'count': 11}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 5}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 7}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2022/B2,"[{'grade': '12', 'count': 30}, {'grade': '10', 'count': 20}, {'grade': '7', 'count': 31}, {'grade': '4', 'count': 24}, {'grade': '02', 'count': 19}, {'grade': '00', 'count': 14}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 31}, {'grade': 'Failed', 'count': 11}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 5}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 7}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2022/B2,"[{'grade': '12', 'count': 30}, {'grade': '10', 'count': 20}, {'grade': '7', 'count': 31}, {'grade': '4', 'count': 24}, {'grade': '02', 'count': 19}, {'grade': '00', 'count': 14}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 31}, {'grade': 'Failed', 'count': 11}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 5}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 7}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2024/B2,"[{'grade': '12', 'count': 21}, {'grade': '10', 'count': 24}, {'grade': '7', 'count': 45}, {'grade': '4', 'count': 39}, {'grade': '02', 'count': 27}, {'grade': '00', 'count': 40}, {'grade': '-3', 'count': 6}, {'grade': 'Ej bedømt', 'count': 2}, {'grade': 'Absent', 'count': 16}, {'grade': 'Failed', 'count': 6}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 8}, {'grade': '02', 'count': 10}, {'grade': '00', 'count': 16}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 6}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2024/B2,"[{'grade': '12', 'count': 21}, {'grade': '10', 'count': 24}, {'grade': '7', 'count': 45}, {'grade': '4', 'count': 39}, {'grade': '02', 'count': 27}, {'grade': '00', 'count': 40}, {'grade': '-3', 'count': 6}, {'grade': 'Ej bedømt', 'count': 2}, {'grade': 'Absent', 'count': 16}, {'grade': 'Failed', 'count': 6}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 8}, {'grade': '02', 'count': 10}, {'grade': '00', 'count': 16}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 6}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2024/B2,"[{'grade': '12', 'count': 21}, {'grade': '10', 'count': 24}, {'grade': '7', 'count': 45}, {'grade': '4', 'count': 39}, {'grade': '02', 'count': 27}, {'grade': '00', 'count': 40}, {'grade': '-3', 'count': 6}, {'grade': 'Ej bedømt', 'count': 2}, {'grade': 'Absent', 'count': 16}, {'grade': 'Failed', 'count': 6}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 8}, {'grade': '02', 'count': 10}, {'grade': '00', 'count': 16}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 6}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2024/B2,"[{'grade': '12', 'count': 21}, {'grade': '10', 'count': 24}, {'grade': '7', 'count': 45}, {'grade': '4', 'count': 39}, {'grade': '02', 'count': 27}, {'grade': '00', 'count': 40}, {'grade': '-3', 'count': 6}, {'grade': 'Ej bedømt', 'count': 2}, {'grade': 'Absent', 'count': 16}, {'grade': 'Failed', 'count': 6}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 8}, {'grade': '02', 'count': 10}, {'grade': '00', 'count': 16}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 6}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2021/B1,"[{'grade': '12', 'count': 28}, {'grade': '10', 'count': 24}, {'grade': '7', 'count': 21}, {'grade': '4', 'count': 27}, {'grade': '02', 'count': 13}, {'grade': '00', 'count': 12}, {'grade': '-3', 'count': 10}, {'grade': 'Absent', 'count': 31}, {'grade': 'Failed', 'count': 10}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2021/B1,"[{'grade': '12', 'count': 28}, {'grade': '10', 'count': 24}, {'grade': '7', 'count': 21}, {'grade': '4', 'count': 27}, {'grade': '02', 'count': 13}, {'grade': '00', 'count': 12}, {'grade': '-3', 'count': 10}, {'grade': 'Absent', 'count': 31}, {'grade': 'Failed', 'count': 10}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2021/B1,"[{'grade': '12', 'count': 28}, {'grade': '10', 'count': 24}, {'grade': '7', 'count': 21}, {'grade': '4', 'count': 27}, {'grade': '02', 'count': 13}, {'grade': '00', 'count': 12}, {'grade': '-3', 'count': 10}, {'grade': 'Absent', 'count': 31}, {'grade': 'Failed', 'count': 10}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Examination prerequisites</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>Written aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as ordinary exam.</p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jacob Holm (4-6d646b7243676c316e7831676e)'],Saved on the 24-02-2025,NDAA09023U
NDAA09023,NDAA09023U Advanced Algorithms and Data Structures (AADS),Advanced Algorithms and Data Structures,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09023E/Winter-2021/B1,"[{'grade': '12', 'count': 28}, {'grade': '10', 'count': 24}, {'grade': '7', 'count': 21}, {'grade': '4', 'count': 27}, {'grade': '02', 'count': 13}, {'grade': '00', 'count': 12}, {'grade': '-3', 'count': 10}, {'grade': 'Absent', 'count': 31}, {'grade': 'Failed', 'count': 10}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}]",NDAA09023E,https://kurser.ku.dk/course/ndaa09023u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science (part time) MSc Programme in Computer Science with a minor subject MSc Programme in Bioinformatics,"Algorithms is about finding scalable solutions to computational problems, and the reliance is only increasing as we enter the world of Big Data. We want algorithms that solve problems efficiently relative to the input size. Exponential time is hopeless. We generally want polynomial time, and for large problems we need linear time. Sometimes we employ data structures that represent the input so that queries about it can be answered very efficiently. In this mandatory course, we will study the list of algorithmic topics below. Some of these topics are covered in more depth in more specialised elective courses.","Knowledge of Graph algorithms such as max flow. Data structures such as van Emde Boas Trees. NP-completeness. Exponential and parameterised algorithms for NP-hard problems. Approximation algorithms. Randomised algorithms. Computational geometry. Linear programming and optimisation. Skills to Analyse algorithms with respect to correctness and efficiency. Explain and use basic randomised algorithms. Recognise NP-hard problems and address them, e.g., using approximation algorithms. Explain and use algorithms for different abstract domains such as graphs and geometry. Formulate real-life problems as algorithmic problems and solve them. Competences to Analyse a computational problem in order to find an appropriate algorithmic approach to solve it.",See Absalon when the course is set up.,"It is assumed that the students are familiar with basic algorithms (sorting, selection, minimum spanning trees, shortest paths) and data structures (lists, stacks, binary trees, search trees, heaps). Academic qualifications equivalent to a BSc degree is recommended.",A mix of lectures and exercises.,"{'Lectures': 36, 'Preparation': 82, 'Theory exercises': 84, 'Exam': 4, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>The student must get 4 out of 6 weekly assignments approved
by the due date in order to qualify for the exam.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>As the exam is an ITX-exam, the University will make computers
available to students at the ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p><p> </p><p>If 10 or fewer students register for the re-exam, it will be
changed to an oral examination of 25 minutes with no preparation
time.</p><p> </p><p>If a student is not yet qualified for the exam, they can qualify
by submitting equivalent assignments. These assignments must be
approved at least three weeks before the re-exam
date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAA09023U,"7,5 ECTS",Full Degree Master,1 block,Block 2,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amir Yehudayoff (4-6975816d486c7136737d366c73)'],Saved on the 20-01-2025,NDAA09023U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2024/B1,"[{'grade': '12', 'count': 23}, {'grade': '10', 'count': 44}, {'grade': '7', 'count': 67}, {'grade': '4', 'count': 32}, {'grade': '02', 'count': 21}, {'grade': '00', 'count': 24}, {'grade': '-3', 'count': 10}, {'grade': 'Absent', 'count': 3}, {'grade': 'Failed', 'count': 5}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 0}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 4}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 5}, {'grade': 'Absent', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) and concurrent programming in Haskell, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code and its potential effects such that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Use advanced programming techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. Familiarity with basic functional programming is strongly recommended. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 124, 'Practical exercises': 28, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Examination prerequisites</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the mandatory assignments. The
assignments may be submitted in groups of up to three
students</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam. The duration of the re-exam is
7 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-71847871835074793e7b853e747b)'],Saved on the 01-05-2025,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2024/B1,"[{'grade': '12', 'count': 23}, {'grade': '10', 'count': 44}, {'grade': '7', 'count': 67}, {'grade': '4', 'count': 32}, {'grade': '02', 'count': 21}, {'grade': '00', 'count': 24}, {'grade': '-3', 'count': 10}, {'grade': 'Absent', 'count': 3}, {'grade': 'Failed', 'count': 5}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 0}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 4}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 5}, {'grade': 'Absent', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) programming in Haskell and concurrent programming in Erlang, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code so that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Quickly acquaint themselves with advanced programming techniques, from academic literature and/or technical documentation. Use those techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 131, 'Practical exercises': 21, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Exam registration requirements</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the 6 mandatory assignments,
distributed as at least 16.7% in each of the two main parts of the
course.</p><p>The assignments may be submitted in groups of up to two
students.</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam.The duration of the re-exam is 5 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-63766a637542666b306d7730666d)'],Saved on the 11-04-2024,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2024/B1,"[{'grade': '12', 'count': 23}, {'grade': '10', 'count': 44}, {'grade': '7', 'count': 67}, {'grade': '4', 'count': 32}, {'grade': '02', 'count': 21}, {'grade': '00', 'count': 24}, {'grade': '-3', 'count': 10}, {'grade': 'Absent', 'count': 3}, {'grade': 'Failed', 'count': 5}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 0}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 4}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 5}, {'grade': 'Absent', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) and concurrent programming in Haskell, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code and its potential effects such that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Use advanced programming techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. Familiarity with basic functional programming is strongly recommended. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 124, 'Practical exercises': 28, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Examination prerequisites</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the mandatory assignments. The
assignments may be submitted in groups of up to three
students</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam. The duration of the re-exam is
7 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-71847871835074793e7b853e747b)'],Saved on the 01-05-2025,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2024/B1,"[{'grade': '12', 'count': 23}, {'grade': '10', 'count': 44}, {'grade': '7', 'count': 67}, {'grade': '4', 'count': 32}, {'grade': '02', 'count': 21}, {'grade': '00', 'count': 24}, {'grade': '-3', 'count': 10}, {'grade': 'Absent', 'count': 3}, {'grade': 'Failed', 'count': 5}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 0}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 4}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 5}, {'grade': 'Absent', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) programming in Haskell and concurrent programming in Erlang, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code so that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Quickly acquaint themselves with advanced programming techniques, from academic literature and/or technical documentation. Use those techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 131, 'Practical exercises': 21, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Exam registration requirements</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the 6 mandatory assignments,
distributed as at least 16.7% in each of the two main parts of the
course.</p><p>The assignments may be submitted in groups of up to two
students.</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam.The duration of the re-exam is 5 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-63766a637542666b306d7730666d)'],Saved on the 11-04-2024,NDAA09013U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2021/B2,"[{'grade': '12', 'count': 10}, {'grade': '10', 'count': 27}, {'grade': '7', 'count': 34}, {'grade': '4', 'count': 25}, {'grade': '02', 'count': 8}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 1}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 14}]","[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 0}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-7566706645696e33707a336970)'],Saved on the 05-07-2024,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2021/B2,"[{'grade': '12', 'count': 10}, {'grade': '10', 'count': 27}, {'grade': '7', 'count': 34}, {'grade': '4', 'count': 25}, {'grade': '02', 'count': 8}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 1}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 14}]","[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 0}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Examination prerequisites</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed except Generative AI and internet access 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-72636d6342666b306d7730666d)'],Saved on the 24-02-2025,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2021/B2,"[{'grade': '12', 'count': 10}, {'grade': '10', 'count': 27}, {'grade': '7', 'count': 34}, {'grade': '4', 'count': 25}, {'grade': '02', 'count': 8}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 1}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 14}]","[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 0}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-7566706645696e33707a336970)'],Saved on the 05-07-2024,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2021/B2,"[{'grade': '12', 'count': 10}, {'grade': '10', 'count': 27}, {'grade': '7', 'count': 34}, {'grade': '4', 'count': 25}, {'grade': '02', 'count': 8}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 1}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 14}]","[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 0}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Examination prerequisites</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed except Generative AI and internet access 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-72636d6342666b306d7730666d)'],Saved on the 24-02-2025,NDAK15006U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2023/B1,"[{'grade': '12', 'count': 11}, {'grade': '10', 'count': 18}, {'grade': '7', 'count': 33}, {'grade': '4', 'count': 34}, {'grade': '02', 'count': 30}, {'grade': '00', 'count': 31}, {'grade': '-3', 'count': 20}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 19}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 10}, {'grade': '02', 'count': 6}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 11}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) and concurrent programming in Haskell, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code and its potential effects such that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Use advanced programming techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. Familiarity with basic functional programming is strongly recommended. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 124, 'Practical exercises': 28, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Examination prerequisites</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the mandatory assignments. The
assignments may be submitted in groups of up to three
students</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam. The duration of the re-exam is
7 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-71847871835074793e7b853e747b)'],Saved on the 01-05-2025,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2023/B1,"[{'grade': '12', 'count': 11}, {'grade': '10', 'count': 18}, {'grade': '7', 'count': 33}, {'grade': '4', 'count': 34}, {'grade': '02', 'count': 30}, {'grade': '00', 'count': 31}, {'grade': '-3', 'count': 20}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 19}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 10}, {'grade': '02', 'count': 6}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 11}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) programming in Haskell and concurrent programming in Erlang, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code so that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Quickly acquaint themselves with advanced programming techniques, from academic literature and/or technical documentation. Use those techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 131, 'Practical exercises': 21, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Exam registration requirements</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the 6 mandatory assignments,
distributed as at least 16.7% in each of the two main parts of the
course.</p><p>The assignments may be submitted in groups of up to two
students.</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam.The duration of the re-exam is 5 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-63766a637542666b306d7730666d)'],Saved on the 11-04-2024,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2023/B1,"[{'grade': '12', 'count': 11}, {'grade': '10', 'count': 18}, {'grade': '7', 'count': 33}, {'grade': '4', 'count': 34}, {'grade': '02', 'count': 30}, {'grade': '00', 'count': 31}, {'grade': '-3', 'count': 20}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 19}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 10}, {'grade': '02', 'count': 6}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 11}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) and concurrent programming in Haskell, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code and its potential effects such that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Use advanced programming techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. Familiarity with basic functional programming is strongly recommended. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 124, 'Practical exercises': 28, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Examination prerequisites</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the mandatory assignments. The
assignments may be submitted in groups of up to three
students</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam. The duration of the re-exam is
7 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-71847871835074793e7b853e747b)'],Saved on the 01-05-2025,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2023/B1,"[{'grade': '12', 'count': 11}, {'grade': '10', 'count': 18}, {'grade': '7', 'count': 33}, {'grade': '4', 'count': 34}, {'grade': '02', 'count': 30}, {'grade': '00', 'count': 31}, {'grade': '-3', 'count': 20}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 19}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 10}, {'grade': '02', 'count': 6}, {'grade': '00', 'count': 6}, {'grade': '-3', 'count': 11}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) programming in Haskell and concurrent programming in Erlang, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code so that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Quickly acquaint themselves with advanced programming techniques, from academic literature and/or technical documentation. Use those techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 131, 'Practical exercises': 21, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Exam registration requirements</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the 6 mandatory assignments,
distributed as at least 16.7% in each of the two main parts of the
course.</p><p>The assignments may be submitted in groups of up to two
students.</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam.The duration of the re-exam is 5 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-63766a637542666b306d7730666d)'],Saved on the 11-04-2024,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2021/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 17}, {'grade': '7', 'count': 25}, {'grade': '4', 'count': 23}, {'grade': '02', 'count': 22}, {'grade': '00', 'count': 18}, {'grade': '-3', 'count': 27}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 21}]","[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 6}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 2}, {'grade': 'Absent', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) and concurrent programming in Haskell, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code and its potential effects such that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Use advanced programming techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. Familiarity with basic functional programming is strongly recommended. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 124, 'Practical exercises': 28, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Examination prerequisites</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the mandatory assignments. The
assignments may be submitted in groups of up to three
students</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam. The duration of the re-exam is
7 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-71847871835074793e7b853e747b)'],Saved on the 01-05-2025,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2021/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 17}, {'grade': '7', 'count': 25}, {'grade': '4', 'count': 23}, {'grade': '02', 'count': 22}, {'grade': '00', 'count': 18}, {'grade': '-3', 'count': 27}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 21}]","[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 6}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 2}, {'grade': 'Absent', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) programming in Haskell and concurrent programming in Erlang, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code so that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Quickly acquaint themselves with advanced programming techniques, from academic literature and/or technical documentation. Use those techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 131, 'Practical exercises': 21, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Exam registration requirements</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the 6 mandatory assignments,
distributed as at least 16.7% in each of the two main parts of the
course.</p><p>The assignments may be submitted in groups of up to two
students.</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam.The duration of the re-exam is 5 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-63766a637542666b306d7730666d)'],Saved on the 11-04-2024,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2021/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 17}, {'grade': '7', 'count': 25}, {'grade': '4', 'count': 23}, {'grade': '02', 'count': 22}, {'grade': '00', 'count': 18}, {'grade': '-3', 'count': 27}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 21}]","[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 6}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 2}, {'grade': 'Absent', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) and concurrent programming in Haskell, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code and its potential effects such that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Use advanced programming techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. Familiarity with basic functional programming is strongly recommended. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 124, 'Practical exercises': 28, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Examination prerequisites</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the mandatory assignments. The
assignments may be submitted in groups of up to three
students</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam. The duration of the re-exam is
7 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-71847871835074793e7b853e747b)'],Saved on the 01-05-2025,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2021/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 17}, {'grade': '7', 'count': 25}, {'grade': '4', 'count': 23}, {'grade': '02', 'count': 22}, {'grade': '00', 'count': 18}, {'grade': '-3', 'count': 27}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 21}]","[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 6}, {'grade': '7', 'count': 5}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 2}, {'grade': 'Absent', 'count': 1}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) programming in Haskell and concurrent programming in Erlang, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code so that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Quickly acquaint themselves with advanced programming techniques, from academic literature and/or technical documentation. Use those techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 131, 'Practical exercises': 21, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Exam registration requirements</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the 6 mandatory assignments,
distributed as at least 16.7% in each of the two main parts of the
course.</p><p>The assignments may be submitted in groups of up to two
students.</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam.The duration of the re-exam is 5 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-63766a637542666b306d7730666d)'],Saved on the 11-04-2024,NDAA09013U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2020/B2,"[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 8}, {'grade': '7', 'count': 13}, {'grade': '4', 'count': 23}, {'grade': '02', 'count': 30}, {'grade': '00', 'count': 20}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 17}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 5}, {'grade': 'Failed', 'count': 1}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-7566706645696e33707a336970)'],Saved on the 05-07-2024,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2020/B2,"[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 8}, {'grade': '7', 'count': 13}, {'grade': '4', 'count': 23}, {'grade': '02', 'count': 30}, {'grade': '00', 'count': 20}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 17}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 5}, {'grade': 'Failed', 'count': 1}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Examination prerequisites</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed except Generative AI and internet access 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-72636d6342666b306d7730666d)'],Saved on the 24-02-2025,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2020/B2,"[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 8}, {'grade': '7', 'count': 13}, {'grade': '4', 'count': 23}, {'grade': '02', 'count': 30}, {'grade': '00', 'count': 20}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 17}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 5}, {'grade': 'Failed', 'count': 1}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Exam registration requirements</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p><p>Books, notes, and similar materials can be brought in paper form
or uploaded before the exam and accessed digitally from the ITX
computer. Read more about this at Study Information.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-7566706645696e33707a336970)'],Saved on the 05-07-2024,NDAK15006U
NDAK15006,NDAK15006U Advanced Computer Systems (ACS),Advanced Computer Systems,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15006E/Winter-2020/B2,"[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 8}, {'grade': '7', 'count': 13}, {'grade': '4', 'count': 23}, {'grade': '02', 'count': 30}, {'grade': '00', 'count': 20}, {'grade': '-3', 'count': 5}, {'grade': 'Absent', 'count': 17}]","[{'grade': '12', 'count': 3}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 5}, {'grade': 'Failed', 'count': 1}]",NDAK15006E,https://kurser.ku.dk/course/ndak15006u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The overall purpose of this course is to offer students an understanding of techniques in computer systems with a focus on correctness and adherence to system properties, such as modularity and atomicity, while at the same time achieving high performance. The course exposes students to various system mechanisms, especially from distributed systems, database systems, and network systems. The course will explore the following aspects: System abstractions and design principles Modularity with clients and services Performance Atomicity and transactions Concurrency control and recovery Reliability, fault-tolerance, and redundancy Distributed protocols for replication Large-scale data processing","Knowledge to Describe the design of transactional and distributed systems, including techniques for modularity, performance, and fault tolerance. Explain how to employ strong modularity through a client-service abstraction as a paradigm to structure computer systems, while hiding the complexity of implementation from clients. Explain techniques for large-scale data processing. Skills to Implement systems that include mechanisms for modularity, atomicity, and fault tolerance. Structure and conduct experiments to evaluate a system's performance. Competences to Discuss design alternatives for a modular computer system, identifying desired system properties as well as describing mechanisms for improving performance while arguing for their correctness. Analyse protocols for concurrency control and recovery, as well as for distribution and replication. Apply the principles of large-scale data processing to analyse concrete information-processing problems.",See Absalon when the course is set up.,"- Basic principles of operating systems and/or databases. - Working knowledge of a standard programming language (Java, C#, etc), including concurrency and communication mechanisms. - Notions of UNIX / shell scripting are helpful, but not required. - Academic qualifications equivalent to a BSc degree is recommended.",Lectures and exercise sessions.,"{'Lectures': 42, 'Theory exercises': 70, 'Project work': 90, 'Exam': 4, 'Total': 206}","Written Continuous feedback during the course of the semester Written feedback is provided as comments to assignment solutions in Absalon. Continuous feedback is provided during exercise classes, where a time window of each class is allocated for Q&A with teaching assistants.","Self Service at KUnet As a exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>On-site written exam, 4 hours under invigilation</div></dd><dt>Type of assessment details</dt><dd>The on-site written exam is an ITX exam.
<br/>
See important information about ITX-exams at Study Information,
menu point: Exams -&gt; Exam types and rules -&gt; Written on-site
exams (ITX)</dd><dt>Examination prerequisites</dt><dd><p>4-6 take home-assignments, marked as pass/fail. To qualify for
the exam the assignments must be passed.</p></dd><dt>Aid</dt><dd>All aids allowed except Generative AI and internet access 
<div><p>This includes books, notes but no access to the
internet.</p><p>The University will make computers available to students at the
ITX-exam.</p><p>Students are not permitted to bring digital aids like computers,
tablets, calculators, mobile phones etc.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>If a student is not qualified for the exam, qualification
can be achieved by approval of equivalent assignments
submitted no later than 3 weeks before the re-exam.</p><p>The re-exam is a 4 hours written exam under
invigilation. </p><p><em>If 10 or fewer students are registered, then the re-exam
will be held as an oral examination of 25 minutes without
preparation.</em></p><p> </p><p> </p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p></div></div>",English,NDAK15006U,"7,5 ECTS",Full Degree Master,1 block,Block 2,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Panagiotis Karras (4-72636d6342666b306d7730666d)'],Saved on the 24-02-2025,NDAK15006U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2022/B1,"[{'grade': '12', 'count': 6}, {'grade': '10', 'count': 18}, {'grade': '7', 'count': 20}, {'grade': '4', 'count': 27}, {'grade': '02', 'count': 16}, {'grade': '00', 'count': 23}, {'grade': '-3', 'count': 32}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 36}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 4}, {'grade': '4', 'count': 9}, {'grade': '02', 'count': 6}, {'grade': '00', 'count': 8}, {'grade': '-3', 'count': 8}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 3}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) and concurrent programming in Haskell, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code and its potential effects such that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Use advanced programming techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. Familiarity with basic functional programming is strongly recommended. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 124, 'Practical exercises': 28, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Examination prerequisites</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the mandatory assignments. The
assignments may be submitted in groups of up to three
students</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam. The duration of the re-exam is
7 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-71847871835074793e7b853e747b)'],Saved on the 01-05-2025,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2022/B1,"[{'grade': '12', 'count': 6}, {'grade': '10', 'count': 18}, {'grade': '7', 'count': 20}, {'grade': '4', 'count': 27}, {'grade': '02', 'count': 16}, {'grade': '00', 'count': 23}, {'grade': '-3', 'count': 32}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 36}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 4}, {'grade': '4', 'count': 9}, {'grade': '02', 'count': 6}, {'grade': '00', 'count': 8}, {'grade': '-3', 'count': 8}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 3}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) programming in Haskell and concurrent programming in Erlang, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code so that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Quickly acquaint themselves with advanced programming techniques, from academic literature and/or technical documentation. Use those techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 131, 'Practical exercises': 21, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Exam registration requirements</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the 6 mandatory assignments,
distributed as at least 16.7% in each of the two main parts of the
course.</p><p>The assignments may be submitted in groups of up to two
students.</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam.The duration of the re-exam is 5 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-63766a637542666b306d7730666d)'],Saved on the 11-04-2024,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2022/B1,"[{'grade': '12', 'count': 6}, {'grade': '10', 'count': 18}, {'grade': '7', 'count': 20}, {'grade': '4', 'count': 27}, {'grade': '02', 'count': 16}, {'grade': '00', 'count': 23}, {'grade': '-3', 'count': 32}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 36}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 4}, {'grade': '4', 'count': 9}, {'grade': '02', 'count': 6}, {'grade': '00', 'count': 8}, {'grade': '-3', 'count': 8}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 3}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) and concurrent programming in Haskell, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code and its potential effects such that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Use advanced programming techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. Familiarity with basic functional programming is strongly recommended. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 124, 'Practical exercises': 28, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Examination prerequisites</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the mandatory assignments. The
assignments may be submitted in groups of up to three
students</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam. The duration of the re-exam is
7 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-71847871835074793e7b853e747b)'],Saved on the 01-05-2025,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2022/B1,"[{'grade': '12', 'count': 6}, {'grade': '10', 'count': 18}, {'grade': '7', 'count': 20}, {'grade': '4', 'count': 27}, {'grade': '02', 'count': 16}, {'grade': '00', 'count': 23}, {'grade': '-3', 'count': 32}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 36}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 4}, {'grade': '4', 'count': 9}, {'grade': '02', 'count': 6}, {'grade': '00', 'count': 8}, {'grade': '-3', 'count': 8}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 3}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) programming in Haskell and concurrent programming in Erlang, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code so that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Quickly acquaint themselves with advanced programming techniques, from academic literature and/or technical documentation. Use those techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 131, 'Practical exercises': 21, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Exam registration requirements</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the 6 mandatory assignments,
distributed as at least 16.7% in each of the two main parts of the
course.</p><p>The assignments may be submitted in groups of up to two
students.</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam.The duration of the re-exam is 5 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-63766a637542666b306d7730666d)'],Saved on the 11-04-2024,NDAA09013U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s24/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2024/B3,"[{'grade': '12', 'count': 6}, {'grade': '10', 'count': 8}, {'grade': '7', 'count': 17}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Failed', 'count': 6}]",,NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6d726471716443676c316e7831676e)'],Saved on the 15-02-2024,NDAK15012U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s24/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2024/B3,"[{'grade': '12', 'count': 6}, {'grade': '10', 'count': 8}, {'grade': '7', 'count': 17}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Failed', 'count': 6}]",,NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6e736572726544686d326f7932686f)'],Saved on the 24-02-2025,NDAK15012U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s21/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2021/B3,"[{'grade': '12', 'count': 6}, {'grade': '10', 'count': 4}, {'grade': '7', 'count': 10}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Failed', 'count': 6}]",,NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6d726471716443676c316e7831676e)'],Saved on the 15-02-2024,NDAK15012U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s21/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2021/B3,"[{'grade': '12', 'count': 6}, {'grade': '10', 'count': 4}, {'grade': '7', 'count': 10}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Failed', 'count': 6}]",,NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6e736572726544686d326f7932686f)'],Saved on the 24-02-2025,NDAK15012U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s25/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2025/B3,"[{'grade': '12', 'count': 9}, {'grade': '10', 'count': 11}, {'grade': '7', 'count': 12}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Failed', 'count': 11}]",,NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6d726471716443676c316e7831676e)'],Saved on the 15-02-2024,NDAK15012U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s25/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2025/B3,"[{'grade': '12', 'count': 9}, {'grade': '10', 'count': 11}, {'grade': '7', 'count': 12}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Failed', 'count': 11}]",,NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6e736572726544686d326f7932686f)'],Saved on the 24-02-2025,NDAK15012U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s22/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2022/B3,"[{'grade': '12', 'count': 5}, {'grade': '10', 'count': 7}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Failed', 'count': 5}]",,NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6d726471716443676c316e7831676e)'],Saved on the 15-02-2024,NDAK15012U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s22/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2022/B3,"[{'grade': '12', 'count': 5}, {'grade': '10', 'count': 7}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Failed', 'count': 5}]",,NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6e736572726544686d326f7932686f)'],Saved on the 24-02-2025,NDAK15012U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s20/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2020/B3,"[{'grade': '12', 'count': 8}, {'grade': '10', 'count': 6}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}]",,NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6d726471716443676c316e7831676e)'],Saved on the 15-02-2024,NDAK15012U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s20/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2020/B3,"[{'grade': '12', 'count': 8}, {'grade': '10', 'count': 6}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 4}]",,NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6e736572726544686d326f7932686f)'],Saved on the 24-02-2025,NDAK15012U
NDAK24003,NDAK24003U Advanced Topics in Deep Learning (ATDL),Advanced Topics in Deep Learning,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK24003E/Winter-2024/B1,"[{'grade': '12', 'count': 9}, {'grade': '10', 'count': 22}, {'grade': '7', 'count': 17}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 3}]",,NDAK24003E,https://kurser.ku.dk/course/ndak24003u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"This course will give you detailed insight into advanced deep learning methods and techniques, covering algorithms, theory and tools in this exciting and fast advancing field. This is an advanced topics course, and the exact list of topics will therefore change from year to year, depending on current trends in the literature. The course is on advanced topics, and it therefore has the introductory machine learning and deep learning courses as prerequisites.","Knowledge of Selected advanced topics in deep learning, including: state-or-the-art deep models in selected domains design of deep learning algorithms analysis of deep learning algorithms theory of deep learning The exact list of topics will depend on the teachers and trends in deep learning research. They will be announced on the course's Absalon page. Skills to Implement selected advanced deep learning algorithms using state-of-the-art tools Read and understand recent scientific literature in the field of deep learning Apply the knowledge obtained by reading scientific papers Compare deep learning methods and assess their potentials and shortcomings Competences to Understand advanced deep learning methods and techniques Design, optimize and use advanced deep models Plan and carry out self-learning",See Absalon.,"Academic qualifications equivalent to a BSc degree and the following courses are recommended: - Machine learning corresponding to the courses Machine Learning A (MLA) and Deep learning (DL). - Solid programming experience in Python. - Linear algebra corresponding to the course Linear Algebra in Computer Science (LinAlgDat). - Calculus corresponding to the courses Mathematical Analysis and Probability Theory for Computer Scientists (MASD) and Modelling and Analysis of Data (MAD), or Introduction to Mathematics for Science (MatIntroNat) and Mathematical Analysis (MatAn), or equivalent. - Statistics and probability theory corresponding to the course Probability Theory and Statistics (SS).","The course will mix lectures, exercise classes, and project work.","{'Lectures': 28, 'Class Instruction': 14, 'Preparation': 70, 'Exercises': 94, 'Total': 206}",Oral Individual Collective Continuous feedback during the course of the semester Peer feedback (Students give each other feedback),"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here!","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment of 3-4 written assignments. All
assignments must be passed. The final grade is based on an overall
assessment.</dd><dt>Aid</dt><dd>All aids allowed 
<div><p>For programming tasks specifically, this includes AI-based
programming tools such as github copilot or similar.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Internal examiner.</div></dd><dt>Re-exam</dt><dd><p>The re-exam is 25 minutes oral examination, without preparation,
in full course syllabus.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAK24003U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation. Unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Stefan Sommer (6-84807e7e768351757a3f7c863f757c)'],Saved on the 14-02-2024,NDAK24003U
NDAK24003,NDAK24003U Advanced Topics in Deep Learning (ATDL),Advanced Topics in Deep Learning,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK24003E/Winter-2024/B1,"[{'grade': '12', 'count': 9}, {'grade': '10', 'count': 22}, {'grade': '7', 'count': 17}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 3}]",,NDAK24003E,https://kurser.ku.dk/course/ndak24003u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"This course will give you detailed insight into advanced deep learning methods and techniques, covering algorithms, theory and tools in this exciting and fast advancing field. This is an advanced topics course, and the exact list of topics will therefore change from year to year, depending on current trends in the literature. The course is on advanced topics, and it therefore has the introductory machine learning and deep learning courses as prerequisites.","Knowledge of Selected advanced topics in deep learning, including: state-or-the-art deep models in selected domains design of deep learning algorithms analysis of deep learning algorithms theory of deep learning The exact list of topics will depend on the teachers and trends in deep learning research. They will be announced on the course's Absalon page. Skills to Implement selected advanced deep learning algorithms using state-of-the-art tools Read and understand recent scientific literature in the field of deep learning Apply the knowledge obtained by reading scientific papers Compare deep learning methods and assess their potentials and shortcomings Competences to Understand advanced deep learning methods and techniques Design, optimize and use advanced deep models Plan and carry out self-learning",See Absalon.,"Academic qualifications equivalent to a BSc degree and the following courses are recommended: - Machine learning corresponding to the courses Machine Learning A (MLA) and Deep learning (DL). - Solid programming experience in Python. - Linear algebra corresponding to the course Linear Algebra in Computer Science (LinAlgDat). - Calculus corresponding to the courses Mathematical Analysis and Probability Theory for Computer Scientists (MASD) and Modelling and Analysis of Data (MAD), or Introduction to Mathematics for Science (MatIntroNat) and Mathematical Analysis (MatAn), or equivalent. - Statistics and probability theory corresponding to the course Probability Theory and Statistics (SS).","The course will mix lectures, exercise classes, and project work.","{'Lectures': 28, 'Class Instruction': 14, 'Preparation': 70, 'Exercises': 94, 'Total': 206}",Oral Individual Collective Continuous feedback during the course of the semester Peer feedback (Students give each other feedback),"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here!","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment of 3-4 written assignments and group
presentations. All assignments must be passed. The final grade is
based on an overall assessment.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Internal examiner.</div></dd><dt>Re-exam</dt><dd><p>The re-exam is 25 minutes oral examination, without preparation,
in the course syllabus.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning outcome</p></div></div>",English,NDAK24003U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation. Unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Mostafa Mehdipour Ghazi (5-6b6c657e6d44686d326f7932686f)'],Saved on the 17-03-2025,NDAK24003U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s23/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2023/B3,"[{'grade': '12', 'count': 5}, {'grade': '10', 'count': 11}, {'grade': '7', 'count': 8}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 3}, {'grade': '-3', 'count': 2}, {'grade': 'Failed', 'count': 11}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 4}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 1}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 1}]",NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6d726471716443676c316e7831676e)'],Saved on the 15-02-2024,NDAK15012U
NDAK15012,NDAK15012U Advanced Topics in Human-Centred Computing (ATHCC),Advanced Topics in Human-Centered Computing,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,s23/B3,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15012E/Summer-2023/B3,"[{'grade': '12', 'count': 5}, {'grade': '10', 'count': 11}, {'grade': '7', 'count': 8}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 3}, {'grade': '-3', 'count': 2}, {'grade': 'Failed', 'count': 11}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 4}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 1}, {'grade': 'Absent', 'count': 1}, {'grade': 'Failed', 'count': 1}]",NDAK15012E,https://kurser.ku.dk/course/ndak15012u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Computer Science with a minor subject,"The aim of the course is to introduce participants to advanced topics in human-centred computing (HCC). HCC spans human-computer interaction, methods for prototyping and developing, and advanced interaction techniques. Participants will read current and classic research papers on HCC and discuss them in-depth. In addition, they will hand in four written assignments on parts of HCC that will be used to grade the course. The graded assignments focus on practicing the scientific tasks and skills discussed in class, for example designing evaluation protocols, analysing data, or surveying and synthesizing literature. The topics discussed in the course are intended to inspire students to pick topics for their master theses.","Knowledge of Human-centred computing (HCC). Current research topics in HCC, including but not limited to user experience, advanced user interfaces, and methods for prototyping and developing user interfaces. Research methods in HCC, including their relative benefits and drawbacks considering aspects of validity, reliability, generalisability, precision, and realism depending upon research questions and methods. Skills in Identifying and analysing scientific literature within HCC research domain. Synthesising the literature within a specific area or domain of HCC, focusing on human use of technology and the major phenomena surrounding it. Formulating and discussing open research questions and problems within the HCC area. Competences in Analysing scientific papers, including considerations on users, tasks, the context of use, and technologies. Discussing scientific work in HCC, in particular, the relation between construction of interfaces, understanding users, and conceptually-driven work. Identifying poor and good arguments in HCC.",Selected papers and book chapters. See Absalon when the course is set up.,"Some introduction to parts of human-centred computing, for instance through courses on Interaction Design, Human-Computer Interaction, User-centred Design, or the like. Academic qualifications equivalent to a BSc degree is recommended.",Classroom discussions and assignments,"{'Class Instruction': 14, 'Preparation': 78, 'Practical exercises': 14, 'Project work': 100, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>Continuous assessment based on 4 assignments. The final grade
is given on an overall assessment of the assignments.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Resubmission of (possibly revised) assignments.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome</p></div></div>",English,NDAK15012U,"7,5 ECTS",Full Degree Master,1 block,Block 3,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Joanna Emilia Bergström (6-6e736572726544686d326f7932686f)'],Saved on the 24-02-2025,NDAK15012U
NDAK15013,NDAK15013U Advanced Topics in Image Analysis (ATIA),Advanced Topics in Image Analysis,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15013E/Winter-2024/B1,"[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 5}, {'grade': '7', 'count': 4}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 2}, {'grade': 'Absent', 'count': 2}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 0}, {'grade': '7', 'count': 1}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 1}]",NDAK15013E,https://kurser.ku.dk/course/ndak15013u/2025-2026,Volume 2025/2026,,"The purpose of this course is to expose the student to selected advanced topics in image analysis. The course will bring the student up to a level sufficient for master thesis work within image analysis and computer vision. Focus is not on specific topics, but rather on recent research trends.","Knowledge of Selected advanced topics in image analysis. Skills to Read, review and understand recent scientific papers. Apply the knowledge obtained by reading scientific papers. Compare methods from computer vision and image analysis and assess their potentials and shortcomings. Competences to Understand advanced methods, and to transfer the gained knowledge to solutions to small problems. Plan and carry out self-learning. Present the result of small assignments in scientific writing.",See Absalon.,"You should have passed the courses ""Machine Learning""/​“Statistical Methods for Machine Learning” and “Signal and Image Processing”, and “Advanced Deep Learning” or similar. Academic qualifications equivalent to a BSc degree is recommended.","The focus of this course is on problem-based learning, with a combination of lecturing, supervision, student presentations, and peer feedback. Active participation is expected.","{'Lectures': 14, 'Preparation': 90, 'Project work': 102, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment</div></dd><dt>Type of assessment details</dt><dd>The written assignment is an individual report written during
the course.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,B,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jens Petersen (4-7f77847f4f73783d7a843d737a)'],Saved on the 24-02-2025,NDAK15013U
NDAK15013,NDAK15013U Advanced Topics in Image Analysis (ATIA),Advanced Topics in Image Analysis,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15013E/Winter-2024/B1,"[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 5}, {'grade': '7', 'count': 4}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 2}, {'grade': 'Absent', 'count': 2}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 0}, {'grade': '7', 'count': 1}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Ej bedømt', 'count': 1}]",NDAK15013E,https://kurser.ku.dk/course/ndak15013u/2024-2025,Volume 2024/2025,,"The purpose of this course is to expose the student to selected advanced topics in image analysis. The course will bring the student up to a level sufficient for master thesis work within image analysis and computer vision. Focus is not on specific topics, but rather on recent research trends.","Knowledge of Selected advanced topics in image analysis. Skills to Read, review and understand recent scientific papers. Apply the knowledge obtained by reading scientific papers. Compare methods from computer vision and image analysis and assess their potentials and shortcomings. Competences to Understand advanced methods, and to transfer the gained knowledge to solutions to small problems. Plan and carry out self-learning. Present the result of small assignments in scientific writing.",See Absalon.,"You should have passed the courses ""Machine Learning""/​“Statistical Methods for Machine Learning” and “Signal and Image Processing”, and “Advanced Deep Learning” or similar. Academic qualifications equivalent to a BSc degree is recommended.","The focus of this course is on problem-based learning, with a combination of lecturing, supervision, student presentations, and peer feedback. Active participation is expected.","{'Lectures': 14, 'Preparation': 90, 'Project work': 102, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment</div></dd><dt>Type of assessment details</dt><dd>The written assignment is an individual report written during
the course.</dd><dt>Aid</dt><dd>All aids allowed 
<div><p>The use of Large Language Models (LLM)/Large Multimodal Models
(LMM) – such as ChatGPT and GPT-4 – is permitted.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,B,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jens Petersen (4-736b787343676c316e7831676e)'],Saved on the 26-04-2024,NDAK15013U
NDAK15013,NDAK15013U Advanced Topics in Image Analysis (ATIA),Advanced Topics in Image Analysis,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15013E/Winter-2023/B1,"[{'grade': '12', 'count': 5}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 4}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 3}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 1}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}]",NDAK15013E,https://kurser.ku.dk/course/ndak15013u/2025-2026,Volume 2025/2026,,"The purpose of this course is to expose the student to selected advanced topics in image analysis. The course will bring the student up to a level sufficient for master thesis work within image analysis and computer vision. Focus is not on specific topics, but rather on recent research trends.","Knowledge of Selected advanced topics in image analysis. Skills to Read, review and understand recent scientific papers. Apply the knowledge obtained by reading scientific papers. Compare methods from computer vision and image analysis and assess their potentials and shortcomings. Competences to Understand advanced methods, and to transfer the gained knowledge to solutions to small problems. Plan and carry out self-learning. Present the result of small assignments in scientific writing.",See Absalon.,"You should have passed the courses ""Machine Learning""/​“Statistical Methods for Machine Learning” and “Signal and Image Processing”, and “Advanced Deep Learning” or similar. Academic qualifications equivalent to a BSc degree is recommended.","The focus of this course is on problem-based learning, with a combination of lecturing, supervision, student presentations, and peer feedback. Active participation is expected.","{'Lectures': 14, 'Preparation': 90, 'Project work': 102, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment</div></dd><dt>Type of assessment details</dt><dd>The written assignment is an individual report written during
the course.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,B,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jens Petersen (4-7f77847f4f73783d7a843d737a)'],Saved on the 24-02-2025,NDAK15013U
NDAK15013,NDAK15013U Advanced Topics in Image Analysis (ATIA),Advanced Topics in Image Analysis,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15013E/Winter-2023/B1,"[{'grade': '12', 'count': 5}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 4}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 3}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 1}, {'grade': '4', 'count': 2}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}]",NDAK15013E,https://kurser.ku.dk/course/ndak15013u/2024-2025,Volume 2024/2025,,"The purpose of this course is to expose the student to selected advanced topics in image analysis. The course will bring the student up to a level sufficient for master thesis work within image analysis and computer vision. Focus is not on specific topics, but rather on recent research trends.","Knowledge of Selected advanced topics in image analysis. Skills to Read, review and understand recent scientific papers. Apply the knowledge obtained by reading scientific papers. Compare methods from computer vision and image analysis and assess their potentials and shortcomings. Competences to Understand advanced methods, and to transfer the gained knowledge to solutions to small problems. Plan and carry out self-learning. Present the result of small assignments in scientific writing.",See Absalon.,"You should have passed the courses ""Machine Learning""/​“Statistical Methods for Machine Learning” and “Signal and Image Processing”, and “Advanced Deep Learning” or similar. Academic qualifications equivalent to a BSc degree is recommended.","The focus of this course is on problem-based learning, with a combination of lecturing, supervision, student presentations, and peer feedback. Active participation is expected.","{'Lectures': 14, 'Preparation': 90, 'Project work': 102, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment</div></dd><dt>Type of assessment details</dt><dd>The written assignment is an individual report written during
the course.</dd><dt>Aid</dt><dd>All aids allowed 
<div><p>The use of Large Language Models (LLM)/Large Multimodal Models
(LMM) – such as ChatGPT and GPT-4 – is permitted.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,B,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jens Petersen (4-736b787343676c316e7831676e)'],Saved on the 26-04-2024,NDAK15013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2020/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 10}, {'grade': '7', 'count': 10}, {'grade': '4', 'count': 21}, {'grade': '02', 'count': 27}, {'grade': '00', 'count': 30}, {'grade': '-3', 'count': 38}, {'grade': 'Absent', 'count': 3}, {'grade': 'Failed', 'count': 21}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 5}, {'grade': '7', 'count': 1}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 8}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 3}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) and concurrent programming in Haskell, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code and its potential effects such that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Use advanced programming techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. Familiarity with basic functional programming is strongly recommended. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 124, 'Practical exercises': 28, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Examination prerequisites</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the mandatory assignments. The
assignments may be submitted in groups of up to three
students</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam. The duration of the re-exam is
7 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-71847871835074793e7b853e747b)'],Saved on the 01-05-2025,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2020/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 10}, {'grade': '7', 'count': 10}, {'grade': '4', 'count': 21}, {'grade': '02', 'count': 27}, {'grade': '00', 'count': 30}, {'grade': '-3', 'count': 38}, {'grade': 'Absent', 'count': 3}, {'grade': 'Failed', 'count': 21}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 5}, {'grade': '7', 'count': 1}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 8}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 3}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) programming in Haskell and concurrent programming in Erlang, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code so that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Quickly acquaint themselves with advanced programming techniques, from academic literature and/or technical documentation. Use those techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 131, 'Practical exercises': 21, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Exam registration requirements</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the 6 mandatory assignments,
distributed as at least 16.7% in each of the two main parts of the
course.</p><p>The assignments may be submitted in groups of up to two
students.</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam.The duration of the re-exam is 5 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-63766a637542666b306d7730666d)'],Saved on the 11-04-2024,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2020/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 10}, {'grade': '7', 'count': 10}, {'grade': '4', 'count': 21}, {'grade': '02', 'count': 27}, {'grade': '00', 'count': 30}, {'grade': '-3', 'count': 38}, {'grade': 'Absent', 'count': 3}, {'grade': 'Failed', 'count': 21}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 5}, {'grade': '7', 'count': 1}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 8}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 3}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) and concurrent programming in Haskell, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code and its potential effects such that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Use advanced programming techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. Familiarity with basic functional programming is strongly recommended. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 124, 'Practical exercises': 28, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Examination prerequisites</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the mandatory assignments. The
assignments may be submitted in groups of up to three
students</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam. The duration of the re-exam is
7 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-71847871835074793e7b853e747b)'],Saved on the 01-05-2025,NDAA09013U
NDAA09013,NDAA09013U Advanced Programming (AP),Advanced Programming,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAA09013E/Winter-2020/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 10}, {'grade': '7', 'count': 10}, {'grade': '4', 'count': 21}, {'grade': '02', 'count': 27}, {'grade': '00', 'count': 30}, {'grade': '-3', 'count': 38}, {'grade': 'Absent', 'count': 3}, {'grade': 'Failed', 'count': 21}]","[{'grade': '12', 'count': 1}, {'grade': '10', 'count': 5}, {'grade': '7', 'count': 1}, {'grade': '4', 'count': 6}, {'grade': '02', 'count': 5}, {'grade': '00', 'count': 8}, {'grade': '-3', 'count': 4}, {'grade': 'Absent', 'count': 2}, {'grade': 'Failed', 'count': 3}]",NDAA09013E,https://kurser.ku.dk/course/ndaa09013u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science,"The purpose of this course is to provide practical experience with sophisticated programming techniques and paradigms from a language-based perspective. The focus is on high-level programming and systematic construction of well-behaved programs. The course will focus on applicative (functional) programming in Haskell and concurrent programming in Erlang, including some key associated libraries and frameworks.","At course completion, the successful student will have: Knowledge of Higher-level program structuring patterns for separating concerns. The basics of message-passing concurrency, and of how concurrent programming can be used for parallel programming. Program structuring principles and design patterns for dealing with software errors. Property-based testing of functions and stateful APIs Skills to Use program structuring principles and design patterns, such as monads, to structure the code so that there is a clear separation of concerns. Use a parser combinator library to write a parser for a medium-sized language with a given grammar, including changing the grammar so that it is on an appropriate form. Implement simple concurrent/distributed servers using message passing, with appropriate use of synchronous and asynchronous message passing. Use program structuring principles and design patterns for making reliable distributed systems in the presence of software errors. Construct systematic test suites for programs and modules, including property-based tests where relevant. Competences to Quickly acquaint themselves with advanced programming techniques, from academic literature and/or technical documentation. Use those techniques to solve challenging, realistic problems. Write correct, efficient, and maintainable programs with clear separation of concerns. Give an assessment of their own code, based on a systematic evaluation of correctness, selection of algorithms and data structures, error scenarios, and elegance.",See Absalon when the course is set up.,"Programming ability in at least two substantially different languages, and familiarity with basic software-development principles (modularity, abstraction, systematic testing, ...) will be expected. It is strongly recommended to have some experience with functional programming, corresponding to Chapters 2, 4, 5, and 6 of ""Learn You a Haskell for Great Good"", for example. General academic qualifications equivalent to a BSc degree in Computer Science, Software Development, or a closely related subject, are recommended.","Lectures, mandatory assignments, exercise labs.","{'Lectures': 29, 'Preparation': 131, 'Practical exercises': 21, 'Exam': 25, 'Total': 206}",Written Individual Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment, 7 days</div></dd><dt>Type of assessment details</dt><dd>The exam is individual</dd><dt>Exam registration requirements</dt><dd><p>To qualify for the exam, the student must obtain at least
50% of the possible total points in the 6 mandatory assignments,
distributed as at least 16.7% in each of the two main parts of the
course.</p><p>The assignments may be submitted in groups of up to two
students.</p></dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>External censorship</dd><dt>Re-exam</dt><dd><p>The re-exam is an individual written assignment, different from
the ordinary exam.The duration of the re-exam is 5 days.</p><p>If student did not already qualify for the ordinary
exam, qualification for the re-exam can be achieved by
(re)submission and approval of the mandatory assignments.</p><p>The assignments must be submitted no later than three weeks
before the re-exam date.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See learning outcome.</p></div></div>",English,NDAA09013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,A,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Troels Henriksen (5-63766a637542666b306d7730666d)'],Saved on the 11-04-2024,NDAA09013U
NDAK15013,NDAK15013U Advanced Topics in Image Analysis (ATIA),Advanced Topics in Image Analysis,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15013E/Winter-2022/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}]",,NDAK15013E,https://kurser.ku.dk/course/ndak15013u/2025-2026,Volume 2025/2026,,"The purpose of this course is to expose the student to selected advanced topics in image analysis. The course will bring the student up to a level sufficient for master thesis work within image analysis and computer vision. Focus is not on specific topics, but rather on recent research trends.","Knowledge of Selected advanced topics in image analysis. Skills to Read, review and understand recent scientific papers. Apply the knowledge obtained by reading scientific papers. Compare methods from computer vision and image analysis and assess their potentials and shortcomings. Competences to Understand advanced methods, and to transfer the gained knowledge to solutions to small problems. Plan and carry out self-learning. Present the result of small assignments in scientific writing.",See Absalon.,"You should have passed the courses ""Machine Learning""/​“Statistical Methods for Machine Learning” and “Signal and Image Processing”, and “Advanced Deep Learning” or similar. Academic qualifications equivalent to a BSc degree is recommended.","The focus of this course is on problem-based learning, with a combination of lecturing, supervision, student presentations, and peer feedback. Active participation is expected.","{'Lectures': 14, 'Preparation': 90, 'Project work': 102, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment</div></dd><dt>Type of assessment details</dt><dd>The written assignment is an individual report written during
the course.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,B,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jens Petersen (4-7f77847f4f73783d7a843d737a)'],Saved on the 24-02-2025,NDAK15013U
NDAK15013,NDAK15013U Advanced Topics in Image Analysis (ATIA),Advanced Topics in Image Analysis,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v22/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15013E/Winter-2022/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 1}, {'grade': '7', 'count': 2}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 0}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}]",,NDAK15013E,https://kurser.ku.dk/course/ndak15013u/2024-2025,Volume 2024/2025,,"The purpose of this course is to expose the student to selected advanced topics in image analysis. The course will bring the student up to a level sufficient for master thesis work within image analysis and computer vision. Focus is not on specific topics, but rather on recent research trends.","Knowledge of Selected advanced topics in image analysis. Skills to Read, review and understand recent scientific papers. Apply the knowledge obtained by reading scientific papers. Compare methods from computer vision and image analysis and assess their potentials and shortcomings. Competences to Understand advanced methods, and to transfer the gained knowledge to solutions to small problems. Plan and carry out self-learning. Present the result of small assignments in scientific writing.",See Absalon.,"You should have passed the courses ""Machine Learning""/​“Statistical Methods for Machine Learning” and “Signal and Image Processing”, and “Advanced Deep Learning” or similar. Academic qualifications equivalent to a BSc degree is recommended.","The focus of this course is on problem-based learning, with a combination of lecturing, supervision, student presentations, and peer feedback. Active participation is expected.","{'Lectures': 14, 'Preparation': 90, 'Project work': 102, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment</div></dd><dt>Type of assessment details</dt><dd>The written assignment is an individual report written during
the course.</dd><dt>Aid</dt><dd>All aids allowed 
<div><p>The use of Large Language Models (LLM)/Large Multimodal Models
(LMM) – such as ChatGPT and GPT-4 – is permitted.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,B,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jens Petersen (4-736b787343676c316e7831676e)'],Saved on the 26-04-2024,NDAK15013U
NDAK15013,NDAK15013U Advanced Topics in Image Analysis (ATIA),Advanced Topics in Image Analysis,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15013E/Winter-2020/B2,"[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 3}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 2}, {'grade': 'Absent', 'count': 3}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 0}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}]",NDAK15013E,https://kurser.ku.dk/course/ndak15013u/2025-2026,Volume 2025/2026,,"The purpose of this course is to expose the student to selected advanced topics in image analysis. The course will bring the student up to a level sufficient for master thesis work within image analysis and computer vision. Focus is not on specific topics, but rather on recent research trends.","Knowledge of Selected advanced topics in image analysis. Skills to Read, review and understand recent scientific papers. Apply the knowledge obtained by reading scientific papers. Compare methods from computer vision and image analysis and assess their potentials and shortcomings. Competences to Understand advanced methods, and to transfer the gained knowledge to solutions to small problems. Plan and carry out self-learning. Present the result of small assignments in scientific writing.",See Absalon.,"You should have passed the courses ""Machine Learning""/​“Statistical Methods for Machine Learning” and “Signal and Image Processing”, and “Advanced Deep Learning” or similar. Academic qualifications equivalent to a BSc degree is recommended.","The focus of this course is on problem-based learning, with a combination of lecturing, supervision, student presentations, and peer feedback. Active participation is expected.","{'Lectures': 14, 'Preparation': 90, 'Project work': 102, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment</div></dd><dt>Type of assessment details</dt><dd>The written assignment is an individual report written during
the course.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,B,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jens Petersen (4-7f77847f4f73783d7a843d737a)'],Saved on the 24-02-2025,NDAK15013U
NDAK15013,NDAK15013U Advanced Topics in Image Analysis (ATIA),Advanced Topics in Image Analysis,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B2,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15013E/Winter-2020/B2,"[{'grade': '12', 'count': 2}, {'grade': '10', 'count': 2}, {'grade': '7', 'count': 3}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 2}, {'grade': 'Absent', 'count': 3}]","[{'grade': '12', 'count': 0}, {'grade': '10', 'count': 0}, {'grade': '7', 'count': 0}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}]",NDAK15013E,https://kurser.ku.dk/course/ndak15013u/2024-2025,Volume 2024/2025,,"The purpose of this course is to expose the student to selected advanced topics in image analysis. The course will bring the student up to a level sufficient for master thesis work within image analysis and computer vision. Focus is not on specific topics, but rather on recent research trends.","Knowledge of Selected advanced topics in image analysis. Skills to Read, review and understand recent scientific papers. Apply the knowledge obtained by reading scientific papers. Compare methods from computer vision and image analysis and assess their potentials and shortcomings. Competences to Understand advanced methods, and to transfer the gained knowledge to solutions to small problems. Plan and carry out self-learning. Present the result of small assignments in scientific writing.",See Absalon.,"You should have passed the courses ""Machine Learning""/​“Statistical Methods for Machine Learning” and “Signal and Image Processing”, and “Advanced Deep Learning” or similar. Academic qualifications equivalent to a BSc degree is recommended.","The focus of this course is on problem-based learning, with a combination of lecturing, supervision, student presentations, and peer feedback. Active participation is expected.","{'Lectures': 14, 'Preparation': 90, 'Project work': 102, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment</div></dd><dt>Type of assessment details</dt><dd>The written assignment is an individual report written during
the course.</dd><dt>Aid</dt><dd>All aids allowed 
<div><p>The use of Large Language Models (LLM)/Large Multimodal Models
(LMM) – such as ChatGPT and GPT-4 – is permitted.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,B,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jens Petersen (4-736b787343676c316e7831676e)'],Saved on the 26-04-2024,NDAK15013U
NDAK15013,NDAK15013U Advanced Topics in Image Analysis (ATIA),Advanced Topics in Image Analysis,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15013E/Winter-2021/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 0}, {'grade': '7', 'count': 4}, {'grade': '4', 'count': 7}, {'grade': '02', 'count': 3}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 3}]",,NDAK15013E,https://kurser.ku.dk/course/ndak15013u/2025-2026,Volume 2025/2026,,"The purpose of this course is to expose the student to selected advanced topics in image analysis. The course will bring the student up to a level sufficient for master thesis work within image analysis and computer vision. Focus is not on specific topics, but rather on recent research trends.","Knowledge of Selected advanced topics in image analysis. Skills to Read, review and understand recent scientific papers. Apply the knowledge obtained by reading scientific papers. Compare methods from computer vision and image analysis and assess their potentials and shortcomings. Competences to Understand advanced methods, and to transfer the gained knowledge to solutions to small problems. Plan and carry out self-learning. Present the result of small assignments in scientific writing.",See Absalon.,"You should have passed the courses ""Machine Learning""/​“Statistical Methods for Machine Learning” and “Signal and Image Processing”, and “Advanced Deep Learning” or similar. Academic qualifications equivalent to a BSc degree is recommended.","The focus of this course is on problem-based learning, with a combination of lecturing, supervision, student presentations, and peer feedback. Active participation is expected.","{'Lectures': 14, 'Preparation': 90, 'Project work': 102, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment</div></dd><dt>Type of assessment details</dt><dd>The written assignment is an individual report written during
the course.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,B,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jens Petersen (4-7f77847f4f73783d7a843d737a)'],Saved on the 24-02-2025,NDAK15013U
NDAK15013,NDAK15013U Advanced Topics in Image Analysis (ATIA),Advanced Topics in Image Analysis,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v21/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15013E/Winter-2021/B1,"[{'grade': '12', 'count': 4}, {'grade': '10', 'count': 0}, {'grade': '7', 'count': 4}, {'grade': '4', 'count': 7}, {'grade': '02', 'count': 3}, {'grade': '00', 'count': 0}, {'grade': '-3', 'count': 0}, {'grade': 'Absent', 'count': 3}]",,NDAK15013E,https://kurser.ku.dk/course/ndak15013u/2024-2025,Volume 2024/2025,,"The purpose of this course is to expose the student to selected advanced topics in image analysis. The course will bring the student up to a level sufficient for master thesis work within image analysis and computer vision. Focus is not on specific topics, but rather on recent research trends.","Knowledge of Selected advanced topics in image analysis. Skills to Read, review and understand recent scientific papers. Apply the knowledge obtained by reading scientific papers. Compare methods from computer vision and image analysis and assess their potentials and shortcomings. Competences to Understand advanced methods, and to transfer the gained knowledge to solutions to small problems. Plan and carry out self-learning. Present the result of small assignments in scientific writing.",See Absalon.,"You should have passed the courses ""Machine Learning""/​“Statistical Methods for Machine Learning” and “Signal and Image Processing”, and “Advanced Deep Learning” or similar. Academic qualifications equivalent to a BSc degree is recommended.","The focus of this course is on problem-based learning, with a combination of lecturing, supervision, student presentations, and peer feedback. Active participation is expected.","{'Lectures': 14, 'Preparation': 90, 'Project work': 102, 'Total': 206}",Written Oral Individual Collective Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here! PhD’s can register for MSc-course by following the same procedure as credit-students, see link above.","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Written assignment</div></dd><dt>Type of assessment details</dt><dd>The written assignment is an individual report written during
the course.</dd><dt>Aid</dt><dd>All aids allowed 
<div><p>The use of Large Language Models (LLM)/Large Multimodal Models
(LMM) – such as ChatGPT and GPT-4 – is permitted.</p></div></dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>Same as the ordinary exam.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15013U,"7,5 ECTS",Full Degree Master,1 block,Block 1,B,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Jens Petersen (4-736b787343676c316e7831676e)'],Saved on the 26-04-2024,NDAK15013U
NDAK15014,NDAK15014U Advanced Topics in Machine Learning (ATML),Advanced Topics in Machine Learning,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15014E/Winter-2024/B1,"[{'grade': '12', 'count': 13}, {'grade': '10', 'count': 7}, {'grade': '7', 'count': 8}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 1}]",,NDAK15014E,https://kurser.ku.dk/course/ndak15014u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Statistics,"As machine learning models are often trained on data containing sensitive private information, it is important to provide reasonable privacy protection to the individuals whose data is included. This course focuses on advanced topics in privacy-preserving machine learning, with a focus on techniques that maintain data privacy without compromising the performance of the learning algorithm. Key concepts covered include differential privacy and federated learning. By the end, students will be prepared to pursue a master's thesis on privacy in machine learning. The course is relevant for computer science students as well as students from other studies with a good mathematical background, including Statistics, Actuarial Mathematics, Mathematics-Economics, Physics, etc. We assume that the students have previously passed Machine Learning A+B courses offered by DIKU. Topics covered include the following broad subjects Privacy attacks on machine learning models Defining Differential privacy and implementing differentially private algorithms, including differentially private Machine Learning algorithms. Learning-theoretic analysis of differentially private machine learning Design and Analysis of Federated learning algorithms WARNING: If you have not taken DIKU's Machine Learning A+B courses, please, check the ""Recommended Academic Qualifications"" box below. Machine Learning courses given at other places do not necessarily prepare you well for this course. It is not advised taking the course if you do not meet the academic qualifications.","Knowledge of Selected topics in private machine learning, including: design and analysis of private learning algorithms design and analysis of distributed learning algorithms Skills to Read and understand recent scientific literature in the field of privacy-preserving machine learning Apply the knowledge obtained by reading scientific papers Competences to Understand advanced methods, and apply the knowledge to practical problems Plan and carry out self-learning",See Absalon.,"The course requires a strong mathematical background. It is suitable for computer science master students, as well as students from mathematics (statistics, actuarial math, math-economics, etc) and physics study programmes. Students from other study programmes can verify if they have sufficient math and programming skills by solving the self-preparation assignment (below) and if in doubt contact the course organiser. It is assumed that the students have successfully passed Machine Learning A+B courses offered by the Department of Computer Science (DIKU). In case you have not taken them, please, go through the self-preparation material and solve the self-preparation assignment provided at https:/​/​sites.google.com/​diku.edu/​machine-learning-courses/​primal before the course starts. (For students with a strong mathematical background and some background in machine learning it should be possible to do the self-preparation within a couple of weeks.) It is strongly not advised taking the course if you do not meet the prerequisites. Programming Language: The programming language of the course is Python. The self-preparation assignment includes a few programming tasks; if you can code them in Python, you should be fine.","Lectures, class instructions and weekly home assignments.","{'Lectures': 28, 'Class Instruction': 14, 'Preparation': 70, 'Exercises': 94, 'Total': 206}",Written Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here!","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>6-8 weekly take-home assignments. The assignments must be
solved individually.
<br/><br/>
The course is based on weekly home assignments, which are graded
continuously over the course of the semester. The final grade is
given as a weighted average of the assignments, except the
assignment with the poorest assessment.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>The re-exam consists of two parts:</p><p>1. The first part is handing in at least 5 of the course
assignments no later than 2 weeks before the oral part of the
re-exam
<br/>
2. The second part is a 30 minutes oral examination without
preparation in the course curriculum</p><p>The final grade will be given as an overall assessment of
the two re-exam parts.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15014U,"7,5 ECTS",Full Degree Master,1 block,Block 1,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amartya Sanyal (4-67737967466a6f34717b346a71)'],Saved on the 24-02-2025,NDAK15014U
NDAK15014,NDAK15014U Advanced Topics in Machine Learning (ATML),Advanced Topics in Machine Learning,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v24/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15014E/Winter-2024/B1,"[{'grade': '12', 'count': 13}, {'grade': '10', 'count': 7}, {'grade': '7', 'count': 8}, {'grade': '4', 'count': 1}, {'grade': '02', 'count': 2}, {'grade': '00', 'count': 2}, {'grade': '-3', 'count': 1}]",,NDAK15014E,https://kurser.ku.dk/course/ndak15014u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Statistics,"The purpose of the course is to expose students to selected advanced topics in theoretical machine learning. In particular, the course will focus on advanced theoretical tools for design and analysis of machine learning algorithms. We will also introduce differential privacy and differentially private learning algorithms. By the end of the course, students will be well-equipped to undertake a master's thesis in machine learning. The course is relevant for computer science students as well as students from other studies with a good mathematical background, including Statistics, Actuarial Mathematics, Mathematics-Economics, Physics, etc. We assume that the students have previously passed Machine Learning A+B courses offered by DIKU. The exact list of topics will depend on the lecturers and trends in machine learning research and will be announced on the course's Absalon page. Feel free to contact the course organiser for details. WARNING: If you have not taken DIKU's Machine Learning A+B courses, please, check the ""Recommended Academic Qualifications"" box below. Machine Learning courses given at other places do not necessarily prepare you well for this course. It is not advised taking the course if you do not meet the academic qualifications.","Knowledge of Selected advanced topics in machine learning, including: design of learning algorithms analysis of learning algorithms design and analysis of private learning algorithms The exact list of topics will depend on the teachers and trends in machine learning research. They will be announced on the course's Absalon page. Skills to Read and understand recent scientific literature in the field of machine learning Apply the knowledge obtained by reading scientific papers Compare machine learning methods and assess their potentials and shortcomings Competences to Understand advanced methods, and apply the knowledge to practical problems Plan and carry out self-learning",See Absalon.,"The course requires a strong mathematical background. It is suitable for computer science master students, as well as students from mathematics (statistics, actuarial math, math-economics, etc) and physics study programmes. Students from other study programmes can verify if they have sufficient math and programming skills by solving the self-preparation assignment (below) and if in doubt contact the course organiser. It is assumed that the students have successfully passed Machine Learning A+B courses offered by the Department of Computer Science (DIKU). In case you have not taken them, please, go through the self-preparation material and solve the self-preparation assignment provided at https:/​/​sites.google.com/​diku.edu/​machine-learning-courses/​atml before the course starts. (For students with a strong mathematical background and some background in machine learning it should be possible to do the self-preparation within a couple of weeks.) It is strongly not advised taking the course if you do not meet the prerequisites. Programming Language: The programming language of the course is Python. The self-preparation assignment includes a few programming tasks; if you can code them in Python, you should be fine.","Lectures, class instructions and weekly home assignments.","{'Lectures': 28, 'Class Instruction': 14, 'Preparation': 70, 'Exercises': 94, 'Total': 206}",Written Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here!","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>6-8 weekly take-home assignments. The assignments must be
solved individually.
<br/><br/>
The course is based on weekly home assignments, which are graded
continuously over the course of the semester. The final grade is
given as a weighted average of the assignments, except the
assignment with the poorest assessment.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>The re-exam consists of two parts:</p><p>1. The first part is handing in at least 5 of the course
assignments no later than 2 weeks before the oral part of the
re-exam
<br/>
2. The second part is a 30 minutes oral examination without
preparation in the course curriculum</p><p>The final grade will be given as an overall assessment of
the two re-exam parts.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15014U,"7,5 ECTS",Full Degree Master,1 block,Block 1,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amartya Sanyal (4-707c82704f73783d7a843d737a)'],Saved on the 14-02-2024,NDAK15014U
NDAK15014,NDAK15014U Advanced Topics in Machine Learning (ATML),Advanced Topics in Machine Learning,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15014E/Winter-2023/B1,"[{'grade': '12', 'count': 10}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 3}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 1}]",,NDAK15014E,https://kurser.ku.dk/course/ndak15014u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Statistics,"As machine learning models are often trained on data containing sensitive private information, it is important to provide reasonable privacy protection to the individuals whose data is included. This course focuses on advanced topics in privacy-preserving machine learning, with a focus on techniques that maintain data privacy without compromising the performance of the learning algorithm. Key concepts covered include differential privacy and federated learning. By the end, students will be prepared to pursue a master's thesis on privacy in machine learning. The course is relevant for computer science students as well as students from other studies with a good mathematical background, including Statistics, Actuarial Mathematics, Mathematics-Economics, Physics, etc. We assume that the students have previously passed Machine Learning A+B courses offered by DIKU. Topics covered include the following broad subjects Privacy attacks on machine learning models Defining Differential privacy and implementing differentially private algorithms, including differentially private Machine Learning algorithms. Learning-theoretic analysis of differentially private machine learning Design and Analysis of Federated learning algorithms WARNING: If you have not taken DIKU's Machine Learning A+B courses, please, check the ""Recommended Academic Qualifications"" box below. Machine Learning courses given at other places do not necessarily prepare you well for this course. It is not advised taking the course if you do not meet the academic qualifications.","Knowledge of Selected topics in private machine learning, including: design and analysis of private learning algorithms design and analysis of distributed learning algorithms Skills to Read and understand recent scientific literature in the field of privacy-preserving machine learning Apply the knowledge obtained by reading scientific papers Competences to Understand advanced methods, and apply the knowledge to practical problems Plan and carry out self-learning",See Absalon.,"The course requires a strong mathematical background. It is suitable for computer science master students, as well as students from mathematics (statistics, actuarial math, math-economics, etc) and physics study programmes. Students from other study programmes can verify if they have sufficient math and programming skills by solving the self-preparation assignment (below) and if in doubt contact the course organiser. It is assumed that the students have successfully passed Machine Learning A+B courses offered by the Department of Computer Science (DIKU). In case you have not taken them, please, go through the self-preparation material and solve the self-preparation assignment provided at https:/​/​sites.google.com/​diku.edu/​machine-learning-courses/​primal before the course starts. (For students with a strong mathematical background and some background in machine learning it should be possible to do the self-preparation within a couple of weeks.) It is strongly not advised taking the course if you do not meet the prerequisites. Programming Language: The programming language of the course is Python. The self-preparation assignment includes a few programming tasks; if you can code them in Python, you should be fine.","Lectures, class instructions and weekly home assignments.","{'Lectures': 28, 'Class Instruction': 14, 'Preparation': 70, 'Exercises': 94, 'Total': 206}",Written Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here!","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>6-8 weekly take-home assignments. The assignments must be
solved individually.
<br/><br/>
The course is based on weekly home assignments, which are graded
continuously over the course of the semester. The final grade is
given as a weighted average of the assignments, except the
assignment with the poorest assessment.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>The re-exam consists of two parts:</p><p>1. The first part is handing in at least 5 of the course
assignments no later than 2 weeks before the oral part of the
re-exam
<br/>
2. The second part is a 30 minutes oral examination without
preparation in the course curriculum</p><p>The final grade will be given as an overall assessment of
the two re-exam parts.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15014U,"7,5 ECTS",Full Degree Master,1 block,Block 1,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amartya Sanyal (4-67737967466a6f34717b346a71)'],Saved on the 24-02-2025,NDAK15014U
NDAK15014,NDAK15014U Advanced Topics in Machine Learning (ATML),Advanced Topics in Machine Learning,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v23/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15014E/Winter-2023/B1,"[{'grade': '12', 'count': 10}, {'grade': '10', 'count': 3}, {'grade': '7', 'count': 7}, {'grade': '4', 'count': 3}, {'grade': '02', 'count': 3}, {'grade': '00', 'count': 1}, {'grade': '-3', 'count': 1}]",,NDAK15014E,https://kurser.ku.dk/course/ndak15014u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Statistics,"The purpose of the course is to expose students to selected advanced topics in theoretical machine learning. In particular, the course will focus on advanced theoretical tools for design and analysis of machine learning algorithms. We will also introduce differential privacy and differentially private learning algorithms. By the end of the course, students will be well-equipped to undertake a master's thesis in machine learning. The course is relevant for computer science students as well as students from other studies with a good mathematical background, including Statistics, Actuarial Mathematics, Mathematics-Economics, Physics, etc. We assume that the students have previously passed Machine Learning A+B courses offered by DIKU. The exact list of topics will depend on the lecturers and trends in machine learning research and will be announced on the course's Absalon page. Feel free to contact the course organiser for details. WARNING: If you have not taken DIKU's Machine Learning A+B courses, please, check the ""Recommended Academic Qualifications"" box below. Machine Learning courses given at other places do not necessarily prepare you well for this course. It is not advised taking the course if you do not meet the academic qualifications.","Knowledge of Selected advanced topics in machine learning, including: design of learning algorithms analysis of learning algorithms design and analysis of private learning algorithms The exact list of topics will depend on the teachers and trends in machine learning research. They will be announced on the course's Absalon page. Skills to Read and understand recent scientific literature in the field of machine learning Apply the knowledge obtained by reading scientific papers Compare machine learning methods and assess their potentials and shortcomings Competences to Understand advanced methods, and apply the knowledge to practical problems Plan and carry out self-learning",See Absalon.,"The course requires a strong mathematical background. It is suitable for computer science master students, as well as students from mathematics (statistics, actuarial math, math-economics, etc) and physics study programmes. Students from other study programmes can verify if they have sufficient math and programming skills by solving the self-preparation assignment (below) and if in doubt contact the course organiser. It is assumed that the students have successfully passed Machine Learning A+B courses offered by the Department of Computer Science (DIKU). In case you have not taken them, please, go through the self-preparation material and solve the self-preparation assignment provided at https:/​/​sites.google.com/​diku.edu/​machine-learning-courses/​atml before the course starts. (For students with a strong mathematical background and some background in machine learning it should be possible to do the self-preparation within a couple of weeks.) It is strongly not advised taking the course if you do not meet the prerequisites. Programming Language: The programming language of the course is Python. The self-preparation assignment includes a few programming tasks; if you can code them in Python, you should be fine.","Lectures, class instructions and weekly home assignments.","{'Lectures': 28, 'Class Instruction': 14, 'Preparation': 70, 'Exercises': 94, 'Total': 206}",Written Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here!","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>6-8 weekly take-home assignments. The assignments must be
solved individually.
<br/><br/>
The course is based on weekly home assignments, which are graded
continuously over the course of the semester. The final grade is
given as a weighted average of the assignments, except the
assignment with the poorest assessment.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>The re-exam consists of two parts:</p><p>1. The first part is handing in at least 5 of the course
assignments no later than 2 weeks before the oral part of the
re-exam
<br/>
2. The second part is a 30 minutes oral examination without
preparation in the course curriculum</p><p>The final grade will be given as an overall assessment of
the two re-exam parts.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15014U,"7,5 ECTS",Full Degree Master,1 block,Block 1,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amartya Sanyal (4-707c82704f73783d7a843d737a)'],Saved on the 14-02-2024,NDAK15014U
NDAK15014,NDAK15014U Advanced Topics in Machine Learning (ATML),Advanced Topics in Machine Learning,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15014E/Winter-2020/B1,"[{'grade': '12', 'count': 10}, {'grade': '10', 'count': 16}, {'grade': '7', 'count': 12}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 4}, {'grade': '-3', 'count': 5}]",,NDAK15014E,https://kurser.ku.dk/course/ndak15014u/2025-2026,Volume 2025/2026,MSc Programme in Computer Science MSc Programme in Statistics,"As machine learning models are often trained on data containing sensitive private information, it is important to provide reasonable privacy protection to the individuals whose data is included. This course focuses on advanced topics in privacy-preserving machine learning, with a focus on techniques that maintain data privacy without compromising the performance of the learning algorithm. Key concepts covered include differential privacy and federated learning. By the end, students will be prepared to pursue a master's thesis on privacy in machine learning. The course is relevant for computer science students as well as students from other studies with a good mathematical background, including Statistics, Actuarial Mathematics, Mathematics-Economics, Physics, etc. We assume that the students have previously passed Machine Learning A+B courses offered by DIKU. Topics covered include the following broad subjects Privacy attacks on machine learning models Defining Differential privacy and implementing differentially private algorithms, including differentially private Machine Learning algorithms. Learning-theoretic analysis of differentially private machine learning Design and Analysis of Federated learning algorithms WARNING: If you have not taken DIKU's Machine Learning A+B courses, please, check the ""Recommended Academic Qualifications"" box below. Machine Learning courses given at other places do not necessarily prepare you well for this course. It is not advised taking the course if you do not meet the academic qualifications.","Knowledge of Selected topics in private machine learning, including: design and analysis of private learning algorithms design and analysis of distributed learning algorithms Skills to Read and understand recent scientific literature in the field of privacy-preserving machine learning Apply the knowledge obtained by reading scientific papers Competences to Understand advanced methods, and apply the knowledge to practical problems Plan and carry out self-learning",See Absalon.,"The course requires a strong mathematical background. It is suitable for computer science master students, as well as students from mathematics (statistics, actuarial math, math-economics, etc) and physics study programmes. Students from other study programmes can verify if they have sufficient math and programming skills by solving the self-preparation assignment (below) and if in doubt contact the course organiser. It is assumed that the students have successfully passed Machine Learning A+B courses offered by the Department of Computer Science (DIKU). In case you have not taken them, please, go through the self-preparation material and solve the self-preparation assignment provided at https:/​/​sites.google.com/​diku.edu/​machine-learning-courses/​primal before the course starts. (For students with a strong mathematical background and some background in machine learning it should be possible to do the self-preparation within a couple of weeks.) It is strongly not advised taking the course if you do not meet the prerequisites. Programming Language: The programming language of the course is Python. The self-preparation assignment includes a few programming tasks; if you can code them in Python, you should be fine.","Lectures, class instructions and weekly home assignments.","{'Lectures': 28, 'Class Instruction': 14, 'Preparation': 70, 'Exercises': 94, 'Total': 206}",Written Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here!","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>6-8 weekly take-home assignments. The assignments must be
solved individually.
<br/><br/>
The course is based on weekly home assignments, which are graded
continuously over the course of the semester. The final grade is
given as a weighted average of the assignments, except the
assignment with the poorest assessment.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>The re-exam consists of two parts:</p><p>1. The first part is handing in at least 5 of the course
assignments no later than 2 weeks before the oral part of the
re-exam
<br/>
2. The second part is a 30 minutes oral examination without
preparation in the course curriculum</p><p>The final grade will be given as an overall assessment of
the two re-exam parts.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15014U,"7,5 ECTS",Full Degree Master,1 block,Block 1,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amartya Sanyal (4-67737967466a6f34717b346a71)'],Saved on the 24-02-2025,NDAK15014U
NDAK15014,NDAK15014U Advanced Topics in Machine Learning (ATML),Advanced Topics in Machine Learning,Det Natur- og Biovidenskabelige Fakultet,Datalogisk Institut,v20/B1,"7,5",http://karakterstatistik.stads.ku.dk/Histogram/NDAK15014E/Winter-2020/B1,"[{'grade': '12', 'count': 10}, {'grade': '10', 'count': 16}, {'grade': '7', 'count': 12}, {'grade': '4', 'count': 4}, {'grade': '02', 'count': 1}, {'grade': '00', 'count': 4}, {'grade': '-3', 'count': 5}]",,NDAK15014E,https://kurser.ku.dk/course/ndak15014u/2024-2025,Volume 2024/2025,MSc Programme in Computer Science MSc Programme in Statistics,"The purpose of the course is to expose students to selected advanced topics in theoretical machine learning. In particular, the course will focus on advanced theoretical tools for design and analysis of machine learning algorithms. We will also introduce differential privacy and differentially private learning algorithms. By the end of the course, students will be well-equipped to undertake a master's thesis in machine learning. The course is relevant for computer science students as well as students from other studies with a good mathematical background, including Statistics, Actuarial Mathematics, Mathematics-Economics, Physics, etc. We assume that the students have previously passed Machine Learning A+B courses offered by DIKU. The exact list of topics will depend on the lecturers and trends in machine learning research and will be announced on the course's Absalon page. Feel free to contact the course organiser for details. WARNING: If you have not taken DIKU's Machine Learning A+B courses, please, check the ""Recommended Academic Qualifications"" box below. Machine Learning courses given at other places do not necessarily prepare you well for this course. It is not advised taking the course if you do not meet the academic qualifications.","Knowledge of Selected advanced topics in machine learning, including: design of learning algorithms analysis of learning algorithms design and analysis of private learning algorithms The exact list of topics will depend on the teachers and trends in machine learning research. They will be announced on the course's Absalon page. Skills to Read and understand recent scientific literature in the field of machine learning Apply the knowledge obtained by reading scientific papers Compare machine learning methods and assess their potentials and shortcomings Competences to Understand advanced methods, and apply the knowledge to practical problems Plan and carry out self-learning",See Absalon.,"The course requires a strong mathematical background. It is suitable for computer science master students, as well as students from mathematics (statistics, actuarial math, math-economics, etc) and physics study programmes. Students from other study programmes can verify if they have sufficient math and programming skills by solving the self-preparation assignment (below) and if in doubt contact the course organiser. It is assumed that the students have successfully passed Machine Learning A+B courses offered by the Department of Computer Science (DIKU). In case you have not taken them, please, go through the self-preparation material and solve the self-preparation assignment provided at https:/​/​sites.google.com/​diku.edu/​machine-learning-courses/​atml before the course starts. (For students with a strong mathematical background and some background in machine learning it should be possible to do the self-preparation within a couple of weeks.) It is strongly not advised taking the course if you do not meet the prerequisites. Programming Language: The programming language of the course is Python. The self-preparation assignment includes a few programming tasks; if you can code them in Python, you should be fine.","Lectures, class instructions and weekly home assignments.","{'Lectures': 28, 'Class Instruction': 14, 'Preparation': 70, 'Exercises': 94, 'Total': 206}",Written Continuous feedback during the course of the semester,"Self Service at KUnet As an exchange, guest and credit student - click here! Continuing Education - click here!","<div aria-labelledby=""accordion-exam1"" class=""collapse"" id=""course-exams1""><dl class=""dl-horizontal""><dt>Credit</dt><dd>7,5 ECTS</dd><dt>Type of assessment</dt><dd><div>Continuous assessment</div></dd><dt>Type of assessment details</dt><dd>6-8 weekly take-home assignments. The assignments must be
solved individually.
<br/><br/>
The course is based on weekly home assignments, which are graded
continuously over the course of the semester. The final grade is
given as a weighted average of the assignments, except the
assignment with the poorest assessment.</dd><dt>Aid</dt><dd>All aids allowed</dd><dt>Marking scale</dt><dd>7-point grading scale</dd><dt>Censorship form</dt><dd>No external censorship 
<div>Several internal examiners</div></dd><dt>Re-exam</dt><dd><p>The re-exam consists of two parts:</p><p>1. The first part is handing in at least 5 of the course
assignments no later than 2 weeks before the oral part of the
re-exam
<br/>
2. The second part is a 30 minutes oral examination without
preparation in the course curriculum</p><p>The final grade will be given as an overall assessment of
the two re-exam parts.</p></dd></dl><h5 class=""panel-title"">Criteria for exam assesment</h5><div><p>See Learning Outcome.</p><p> </p></div></div>",English,NDAK15014U,"7,5 ECTS",Full Degree Master,1 block,Block 1,C,No limitation – unless you register in the late-registration period (BSc and MSc) or as a credit or single subject student.,['Study Board of Mathematics and Computer Science'],['Department of Computer Science'],['Faculty of Science'],['Amartya Sanyal (4-707c82704f73783d7a843d737a)'],Saved on the 14-02-2024,NDAK15014U
