CREATE TABLE USERS (
    KU_ID CHAR(6),
    username CHAR(40),
    PRIMARY KEY (KU_ID)
);

CREATE TABLE COURSES (
    KURSUS_ID CHAR(10),
    name CHAR(40),
    description CHAR(1000),
    blok CHAR(1),
    PRIMARY KEY (KURSUS_ID)
);

CREATE TABLE COURSE_COORDINATOR (
    CC_ID INTEGER,
    name CHAR(40),
    PRIMARY KEY (CC_ID)
);

CREATE TABLE COURSE_AT_YEAR (
    KURSUS_ID CHAR(10),
    year INTEGER,
    avg_grade INTEGER,
    PRIMARY KEY (KURSUS_ID, year),
    FOREIGN KEY (KURSUS_ID) REFERENCES COURSES(KURSUS_ID)
        ON UPDATE CASCADE
);

CREATE TABLE RATING (
    KU_ID CHAR(6),
    KURSUS_ID CHAR(10),
    year INTEGER,
    time_stamp DATE,
    score INTEGER,
    comment CHAR(250),
    PRIMARY KEY (KU_ID, KURSUS_ID, year),
    FOREIGN KEY (KU_ID) REFERENCES USERS(KU_ID)
        ON UPDATE CASCADE
        ON DELETE SET NULL,
    FOREIGN KEY (KURSUS_ID, year) REFERENCES COURSE_AT_YEAR(KURSUS_ID, year)
        ON UPDATE CASCADE
);

CREATE TABLE COORDINATES (
    KURSUS_ID CHAR(10),
    year INTEGER,
    CC_ID INTEGER,
    PRIMARY KEY (KURSUS_ID, year, CC_ID),
    FOREIGN KEY (KURSUS_ID, year) REFERENCES COURSE_AT_YEAR(KURSUS_ID, year)
        ON UPDATE CASCADE,
    FOREIGN KEY (CC_ID) REFERENCES COURSE_COORDINATOR(CC_ID)
);

